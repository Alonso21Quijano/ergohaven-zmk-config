#include "keys_ru.h"
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        cap_sen: cap_sen {
            compatible = "zmk,behavior-hold-tap";
            label = "CAP_SEN";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-while-undecided;
        };

        mkpt: mkpt {
            compatible = "zmk,behavior-hold-tap";
            label = "MKPT";
            bindings = <&mkp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
        };
    };

    macros {
        toggle_lang_mo_2: toggle_lang_mo_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LS(LC(F20))>,
                <&macro_press>,
                <&mo 2>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 2>,
                <&macro_tap>,
                <&kp LS(LC(F21))>;

            label = "TOGGLE_LANG_MO_2";
        };

        toggle_lang_ctrl: toggle_lang_ctrl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LS(LC(F20))>,
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp LS(LC(F21))>;

            label = "TOGGLE_LANG_CTRL";
        };

        toggle_lang_mo_9: toggle_lang_mo_9 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LS(LC(F20))>,
                <&macro_press>,
                <&mo 9>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 9>,
                <&macro_tap>,
                <&kp LS(LC(F21))>;

            label = "TOGGLE_LANG_MO_9";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp GRAVE          &kp Q  &kp W    &kp E     &kp R              &kp T                                    &kp Y  &kp U        &kp I       &kp O     &kp P       &kp LBKT
&kp LSHFT          &kp A  &kp S    &kp D     &kp F              &kp G                                    &kp H  &mkpt MB1 J  &kp K       &kp L     &lt 5 SEMI  &kp RSHIFT
&mt LALT LS(LALT)  &kp Z  &kp X    &kp C     &kp V              &kp B                                    &kp N  &kp M        &kp COMMA   &kp DOT   &kp RBKT    &kp SQT
                          &kp TAB  &kp BSPC  &toggle_lang_ctrl  &toggle_lang_mo_9  &kp SPACE    &kp RET  &mo 1  &mo 4        &kp DELETE  &kp LGUI
            >;

            display-name = "Base";
        };

        nav {
            bindings = <
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans                    &trans    &kp LG(LEFT)  &kp LG(DOWN)   &kp LG(UP)   &kp LG(RIGHT)  &trans
&trans  &trans  &kp N4  &kp N5  &kp N6  &trans                    &kp HOME  &kp LEFT      &kp DOWN       &kp UP       &kp RIGHT      &kp END
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans                    &trans    &kp LC(LEFT)  &kp PAGE_DOWN  &kp PAGE_UP  &kp LC(RIGHT)  &trans
                &trans  &kp N0  &trans  &mo 3   &trans    &trans  &trans    &trans        &trans         &trans
            >;

            display-name = "Navigation";
        };

        sym {
            bindings = <
&kp ESC       &kp LS(AT)     &kp LS(LT)    &kp EQUAL     &kp LS(GT)    &kp LS(PRCNT)                    &trans  &kp LBKT       &kp P      &kp RBKT      &kp LS(EXCL)   &trans
&trans        &kp LS(POUND)  &kp LS(LPAR)  &kp MINUS     &kp LS(RPAR)  &kp LS(AMPS)                     &trans  &kp LS(LBRC)   &kp SQT    &kp LS(RBRC)  &kp LS(QMARK)  &trans
&kp LS(PIPE)  &kp LS(CARET)  &kp BSLH      &kp LS(STAR)  &kp FSLH      &kp LS(DLLR)                     &trans  &kp LS(UNDER)  &kp COMMA  &kp DOT       &kp FSLH       &trans
                             &trans        &trans        &trans        &trans         &trans    &trans  &mo 3   &trans         &trans     &trans
            >;

            display-name = "Symbols";
        };

        adj {
            bindings = <
&none         &none  &kp F7  &kp F8  &kp F9  &kp F12                  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4     &bt BT_CLR
&kp CAPSLOCK  &none  &kp F4  &kp F5  &kp F6  &kp F11                  &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &kp PRINTSCREEN  &studio_unlock
&none         &none  &kp F1  &kp F2  &kp F3  &kp F10                  &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &none            &none
                     &none   &none   &none   &none    &none    &none  &none         &none         &none             &none
            >;

            display-name = "Adjust";
        };

        mouse {
            bindings = <
&to 7   &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &mo 5   &mkp MB3  &mkp MB2  &mkp MB1  &mo 6                     &mo 6   &mkp MB1  &mkp MB2  &mkp MB3  &mo 5   &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;

            display-name = "Mouse";
        };

        scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "Scroll";
        };

        sniper {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &mkp MB3  &mkp MB2  &mkp MB1  &trans                    &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans  &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;

            display-name = "Sniper";
        };

        base_wo_ms {
            label = "base_wo_ms";
            bindings = <
&kp GRAVE          &kp Q  &kp W    &kp E     &kp R              &kp T                                    &kp Y  &kp U  &kp I       &kp O     &kp P     &kp LBKT
&kp LSHFT          &kp A  &kp S    &kp D     &kp F              &kp G                                    &kp H  &kp J  &kp K       &kp L     &kp SEMI  &kp RSHIFT
&mt LALT LS(LALT)  &kp Z  &kp X    &kp C     &kp V              &kp B                                    &kp N  &kp M  &kp COMMA   &kp DOT   &kp RBKT  &kp SQT
                          &kp TAB  &kp BSPC  &toggle_lang_ctrl  &toggle_lang_mo_9  &kp SPACE    &kp RET  &mo 8  &none  &kp DELETE  &kp LGUI
            >;

            display-name = "base_wo_ms";
        };

        nav_wo_ms {
            label = "nav_wo_ms";
            bindings = <
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans                    &trans    &kp LG(LEFT)  &kp LG(DOWN)   &kp LG(UP)   &kp LG(RIGHT)  &trans
&trans  &trans  &kp N4  &kp N5  &kp N6  &trans                    &kp HOME  &kp LEFT      &kp DOWN       &kp UP       &kp RIGHT      &kp END
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans                    &trans    &kp LC(LEFT)  &kp PAGE_DOWN  &kp PAGE_UP  &kp LC(RIGHT)  &trans
                &trans  &kp N0  &trans  &mo 10  &trans    &trans  &trans    &trans        &trans         &trans
            >;

            display-name = "nav_wo_ms";
        };

        symb_wo_ms {
            label = "symb_wo_ms";
            bindings = <
&kp ESC       &kp LS(AT)     &kp LS(LT)    &kp EQUAL     &kp LS(GT)    &kp LS(PRCNT)                    &trans  &kp LBKT       &kp P      &kp RBKT      &kp LS(EXCL)   &trans
&trans        &kp LS(POUND)  &kp LS(LPAR)  &kp MINUS     &kp LS(RPAR)  &kp LS(AMPS)                     &trans  &kp LS(LBRC)   &kp SQT    &kp LS(RBRC)  &kp LS(QMARK)  &trans
&kp LS(PIPE)  &kp LS(CARET)  &kp BSLH      &kp LS(STAR)  &kp FSLH      &kp LS(DLLR)                     &trans  &kp LS(UNDER)  &kp COMMA  &kp DOT       &kp FSLH       &trans
                             &trans        &trans        &trans        &trans         &trans    &trans  &mo 10  &trans         &trans     &trans
            >;

            display-name = "symb_wo_ms";
        };

        adjust_wo_ms {
            label = "adjust_wo_ms";
            bindings = <
&to 0         &none  &kp F7  &kp F8  &kp F9  &kp F12                  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4     &bt BT_CLR
&kp CAPSLOCK  &none  &kp F4  &kp F5  &kp F6  &kp F11                  &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &kp PRINTSCREEN  &studio_unlock
&none         &none  &kp F1  &kp F2  &kp F3  &kp F10                  &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &none            &none
                     &none   &none   &none   &none    &none    &none  &none         &none         &none             &none
            >;

            display-name = "adjust_wo_ms";
        };
    };
};

&trackball { cpi = <1000>; };

&trackball_listener {
    input-processors = <&zip_xy_scaler 9 20>;

    scroller {
        layers = <5>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            <&zip_xy_scaler 1 32>,
            <&zip_xy_to_scroll_mapper>;
    };

    sniper {
        layers = <6>;
        input-processors = <&zip_xy_scaler 1 4>;
    };
};
